# key data files

## election data

`data-processing/elections/data/election.json`: A nested object of (1) years, (2) states, (3) either numbered districts or lists of at large "AL" or general ticket "GT" elections. Generated by `data-processing/elections/data_csvtojson.js`.

`data-processing/atLargeAndGeneralTicket/data/alAndgts.json`: A list of the number of at-large and general-election districts for each election year and state.

## spatial data

### districts

`data-procession/districts/unsimplified-geojson/${CONGRESS NUM}.json`: A geojson object with the unsimplfied districts for each election.

`data-processing/simplfied-geojson-${N}/${CONGRESS NUM}.json`: Directories with geojson files for each election simplified to a specified percent `${N}`. We select the best among these by eye for the final simplified versions.

`data-processing/final-simplfied-geojson/${CONGRESS NUM}.json`: The final simplified geojson for each elections.

### bubbles

`data-processing/dorlings/data/polylabelCoords.json`: Geojson object containing the pole of inaccessiblity coordinates for each district boundaries identified by districtID (`id`). Generated by `data-processing/calcDistrictLabelPositions.js`.

`data-processing/combinedData/bubblesXYs.json`: A list, one for each year, with keys `year`, `districts`, and `cities`. `districts` and `cities` are themselves lists with the calculated x and y coordinates for each district for both the cartogram and the pole of inaccessibility/centroid.

### spatial ids

`data-processing/spatialIds/data/preliminaryMapping.json`: A nested object of (1) years, (2) states (abbr), (3) districtID for that year as key, district ID for next election as value. Those are always the same as its the easy calculation when `startcong` and `endcong` span multiple elections. Generated by `data-processing/spatialIds/makePreliminaryMapping.js`.

`data-processing/spatialIds/data/candidates2.json`: A list of objects containing values for these keys: `fromyear`, `toyear`, `state`, `previousdistrict`, `nextdistrict`, `overlap`. Years are alwayssubsequent elections--no skipping in this first pass. Generated by `data-processing/spatialIds/precalculateCandidates.js`.

`data-processing/spatialIds/data/candidatesExceptions.json`: Essentially the same kind of file as the `candidates2.json` file above but for not sequential elections, skipping general ticket elections and the Civil War for Confederate states. Generated by `data-processing/spatialIds/precalculateExceptionsCandidates.js`.

`data-processing/spatialIds/data/secondMapping.json`: Amended from `preliminaryMapping.json` above but using selected candidates to link districts with different boundaries across time. Generated by `data-processing/spatialIds/selectCandidates.js`.

`data-processing/spatialIds/data/spatialIds.json`: An object of spatial ideas, each containing another object where the key is a year and the value the district id. Generated by `data-processing/spatialIds/assignSpatialIds.js`.

`data-processing/spatialIds/idMap.json`: An where the key is a year and the value another object where each key is the district id and the value the spatial id. Generated by `data-processing/spatialIds/makeLookup.js`.

## final combined data

`build/static/elections/{year}.json`: An object. The key `elections` is a list of objects with all the spatial and election data for each election for that year. The key `cityBubbles` is a list of objects with analagous data for cities. The key `states` contains the same for states. Generated by `data-processing/combinedData/combine.js`.

`build/static/space-data/{spatialId}.json: A list of object containing election data for linked districts across time used to create the graph on district selection. Generated by `data-processing/combinedData/combine.js`.


